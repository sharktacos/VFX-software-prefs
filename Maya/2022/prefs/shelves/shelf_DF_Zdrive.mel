global proc shelf_DF_docs () {
    global string $gBuffStr;
    global string $gBuffStr0;
    global string $gBuffStr1;


    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Point Light w/ Radius" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "Point Light w/ Radius" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "pointlight.png" 
        -image1 "pointlight.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "//make a pointLight and a nurbs sphere and parent them. Template the sphere.\nstring $sph[] = `sphere`;\nstring $pnt = `pointLight`;\n//print (\"it is \" + $pnt);\nparent $sph[0] $pnt;\n\n// Template the sphere. Connect the light's radius to the sphere scale and set to 1\nsetAttr ($sph[0] + \".template\") 1;\nconnectAttr -f ( $pnt + \".aiRadius\" ) ( $sph[0] + \".scaleX\" );\nconnectAttr -f ( $pnt + \".aiRadius\" ) ( $sph[0] + \".scaleY\" );\nconnectAttr -f ( $pnt + \".aiRadius\" ) ( $sph[0] + \".scaleZ\" );\nsetAttr ($pnt + \".aiRadius\") 1;\n\n//light settings: normalize off, intensity 30\nsetAttr ($pnt + \".aiNormalize\") 0;\nsetAttr ($pnt + \".intensity\") 30;\n\n// set light group name to light name\nsetAttr -type \"string\" ($pnt + \".aiAov\") `listRelatives -p $pnt`;\nselect -r $pnt ;" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Area Light" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "Area Light" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "C:/Program Files/Autodesk/Arnold/maya2022/icons/AreaLightShelf.png" 
        -image1 "C:/Program Files/Autodesk/Arnold/maya2022/icons/AreaLightShelf.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import mtoa.utils as mutils\nimport maya.cmds as mc\n\nareaLight = mutils.createLocator(\"aiAreaLight\", asLight=True)\nmc.setAttr ( areaLight[1]+'.aiSoftEdge', 1)\nmc.setAttr ( areaLight[1]+'.normalize', 0)\nmc.setAttr ( areaLight[1]+'.intensity', 30)\nmc.setAttr ( areaLight[1]+'.aiAov', areaLight[1], type=\"string\")" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Directional Light" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "Directional Light" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "directionallight.png" 
        -image1 "directionallight.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "string $dir = `directionalLight`;\nsetAttr ($dir + \".intensity\") 2;\nsetAttr ($dir + \".aiExposure\") 1.6514;\nsetAttr -type \"string\" ($dir + \".aiAov\") \"sun\";" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Dome Light" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "Dome Light" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "C:/Program Files/Autodesk/Arnold/maya2022/icons/SkydomeLightShelf.png" 
        -image1 "C:/Program Files/Autodesk/Arnold/maya2022/icons/SkydomeLightShelf.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import mtoa.utils as mutils\nimport maya.cmds as mc\n\ndomeLight = mutils.createLocator(\"aiSkyDomeLight\", asLight=True)\nmc.setAttr ( domeLight[1]+'.aiNormalize', 0)\nmc.setAttr ( domeLight[1]+'.aiAovIndirect', 1)\nmc.setAttr ( domeLight[1]+'.aiUseColorTemperature', 1)\nmc.setAttr ( domeLight[1]+'.aiColorTemperature', 15000)\nmc.setAttr ( domeLight[1]+'.aiAov', \"sky\", type=\"string\")" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    separator
        -enable 1
        -width 34
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -style "shelf" 
        -horizontal 0
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Alembic Shader Transfer" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "Alembic Shader Transfer" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "Z:/Maya/2022/prefs/icons/ShaderToABC_200.png" 
        -image1 "Z:/Maya/2022/prefs/icons/ShaderToABC_200.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "# ##################################################################################\n#                                        dfMakeTx Py3\n#                 Concept & Design: Derek Flood, Python scripting: ShanShan He 2017\n#            See http://docs.sharktacos.com/texture/abcTex.html for detailed description\n#\t\t\t\t\n#\t\tUsage: To call the script, copy the text here and paste it into the \n#\t\tMaya Script Editor in a Python tab. Hit \"play\" in the Script Editor to launch the GUI.\n#\t\tYou can also make a shelf button for it by selecting the text in the Python tab \n#\t\tand MMB-draging it into the Maya shelf.\n#\n# \n# ##################################################################################\n\nimport maya.cmds as mc\nimport os, sys\n\nif mc.window('TransferTex', ex = True):\n    mc.deleteUI ('TransferTex')\n\n\nwindow = mc.window( \"TransferTex\",widthHeight=(250,155))\nmainLayout = mc.columnLayout( adjustableColumn=True )\nrouteLayout11 = mc.rowLayout(nc = 4, w = 390, cw4 = (5,90,28,5), p = mainLayout )\nrouteRow44 = mc.text(label = '', p = routeLayout11)\nrouteRow11 = mc.button( label='Select Source',command = 'sSource()' ,p = routeLayout11 ) \nrouteRow22 = mc.textScrollList( 'sourcegroup', numberOfRows=6, allowMultiSelection=True, a = [], w = 150, h = 22, p = routeLayout11,\n            showIndexedItem=1 )\nmc.separator( height=40, w = 430, style='out', p = mainLayout )\n\nrouteLayout1 = mc.rowLayout(nc = 4, w = 390, cw4 = (5,90,28,5), p = mainLayout )\nrouteRow4 = mc.text(label = '', p = routeLayout1)\nrouteRow1 = mc.button( label='Select Target',command = 'sTarget()'  ,p = routeLayout1)\nrouteRow33 = mc.textScrollList( 'targetgroup', numberOfRows=6, allowMultiSelection=True, a = [], w = 150, h = 22, p = routeLayout1,\n            showIndexedItem=1 )\nmc.separator( height=40, w = 430, style='out', p = mainLayout )\n\nmc.button( label='Transfer Materials',w = 150,command = 'tMaterials()' ,p =mainLayout)\nmc.separator( height=30, w = 430, p = mainLayout )\nmc.button( label='Close', command=('cmds.deleteUI(\\\"' + window + '\\\", window=True)') ,p =mainLayout)\n\nmc.separator( height=20, w = 430, style='out', p = mainLayout )\nmc.window('TransferTex', edit=True, widthHeight=(300, 300) ) \nmc.setParent( '..' )\nmc.showWindow( window )\n\n\n\ndef sSource():\n    global shadingGrps\n    global sourceSel\n    global sameName\n    global sourceName\n    global shapesInSel\n    sameName = []\n    sourceName = []\n    transforms =  mc.ls(type='transform')\n    deleteList = []\n    for tran in transforms:\n        if mc.nodeType(tran) == 'transform':\n            children = cmds.listRelatives(tran, c=True) \n            if children == None:\n                deleteList.append(tran)\n    if deleteList == []:\n        pass\n    else:\n        mc.delete(deleteList)\n    # get list of selection:\n    shapesInSel = mc.ls(dag=1,o=1,l=1,sl=1,g=True)\n    consrain = mc.ls(type='constraint')\n\n#    if len(consrain) > 0:\n#        mc.select(consrain)\n#        mc.parentConstraint(n= 'consrain', remove = True )\n#    else:\n#        pass\n\n\n\n    sourceSel = mc.ls(sl=True)\n\n\n    for sourceNames in shapesInSel:\n        sourceName.append(sourceNames)\n        oldnNames = sourceNames.split('|',2)\n        for oldName in oldnNames[2:]:\n            sameName.append(oldName.encode(\"utf-8\"))\n            \n#cmd = 'GET ' + user_url + ' HTTP/1.0\\r\\n\\r\\n'.encode()\n#cmd = 'GET {} HTTP/1.0\\r\\n\\r\\n'.format(user_url)  # still a str\n#mysock.send(cmd.encode())  # send the encoding of the str\n\n    mc.textScrollList('sourcegroup',e = True, ai = True, append = sourceSel,removeAll = True)\n\n\ndef sTarget():\n    global shapesOutSel\n    global targetSel\n    global neName\n    neName = []\n    transforms =  mc.ls(type='transform')\n\n    deleteList = []\n    for tran in transforms:\n        if mc.nodeType(tran) == 'transform':\n            children = cmds.listRelatives(tran, c=True) \n            if children == None:\n                deleteList.append(tran)\n\n    if deleteList == []:\n        pass\n    else:\n        mc.delete(deleteList)\n    consrain = mc.ls(type='constraint')\n#    if len(consrain) > 0:\n#        mc.select(consrain)\n#        mc.parentConstraint(n= 'consrain', remove = True )\n#    else:\n#        pass\n    # get samename of selection:\n    shapesOutSel = mc.ls(dag=1,o=1,l=1,sl=1,g=True)\n    targetSel = mc.ls(sl=True)\n    for targetNames in shapesOutSel:\n        neNames = targetNames.rsplit('|',5)\n        neName.append(neNames)\n\n    mc.textScrollList('targetgroup',e = True, ai = True, append = targetSel,removeAll = True)\n\n\n\ndef tMaterials():\n    global shadingGrps\n    global sourceSel\n    global shapesOutSel\n    global targetSel\n    global sameName\n    global neName\n    global sourceName\n    global shapesInSel\n    fullName = []\n    errorList = []\n\n    for comb in str(sameName):\n        fullName.append(str(targetSel[0] + '|' + comb))\n\n    for ii in shapesInSel:\n        snames = ii.rsplit('|',2)\n        shadingGrps = mc.listConnections(ii,type='shadingEngine')\n\n        if shadingGrps == None:\n            pass\n        else:\n            names = mc.listConnections(shadingGrps, type=\"mesh\")\n            #print shadingGrps, \"->\", \", \".join(names)  \n            CacheGroup = mc.ls(snames[-2], l=True)\n            \n            if len(CacheGroup) < 2:\n                errorfinds = \"# Warning: Can't find Geo\" \"%s\"%(snames[-2])\n                errorfind = errorfinds + \" in the target group\"\n                errorList.append(errorfind)\n                someList = cmds.textScrollList('ErrorWarning', exists=True)\n                if someList == False:\n                    Error = mc.textScrollList( 'ErrorWarning', numberOfRows=6, allowMultiSelection=True, a = [], w = 150, h = 62, p = mainLayout,\n                    showIndexedItem=1 )\n                else:\n                    pass\n                mc.textScrollList('ErrorWarning',e = True, ai = True, append = \"%s\"%(errorfind))\n\n\n            else:\n                mc.sets(CacheGroup, edit=True, forceElement=\"%s\"%(shadingGrps[0]))\n                Geos = CacheGroup[0].split('|')\n                print (shadingGrps[0], \"assigned to object\", Geos[-1])\n    for eacherror in errorList:\n        print (eacherror)\n\n" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "UV Transfer" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "UV Transfer" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "Z:/Maya/2022/prefs/icons/UVTransfer.png" 
        -image1 "Z:/Maya/2022/prefs/icons/UVTransfer.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//srbUVTransfer.mel - MEL Script\n//Copyright (C) Suchan Raj Bajracharya\n//Title: SRB - SRB - UV Transfer v0.2\n//AUTHOR:\tSuchan Raj Bajracharya\n//\t\t\t\tsuchanspot.blogspot.com\n//\t\t\t\tpuppeteerlounge.com\n//\t\t\t\tsrb_yagya@hotmail.com\t\t\n//VERSION: 0.1\n//DATE: May 6th, 2009\n//DESCRIPTION: Use this Tool to automatically transfer the UV sets of multiple objects...\n//USAGE: Load the source objects and the target objects and click apply...\n// \n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n//CREATE THE GLOBAL PROCEDURE FOR srbUVTransfer.mel---\nglobal proc srbUVTransfer () {\n\n//User Interface---------------------\n\nif (`window -exists srbUVTransferWin`) deleteUI srbUVTransferWin;\nwindow\n\t-rtf 1\n\t-title \"SRB - UV Transfer v0.2\"\nsrbUVTransferWin;\n\ncolumnLayout -adj 1;\n\t\nrowLayout\n\t-numberOfColumns 2\n\t-columnWidth2 200 200\n\t-columnAttach 1 \"both\" 5\n\t-columnAttach 2 \"both\" 5;\n\n//SOURCE LIST\n\tcolumnLayout\n\t\t-adjustableColumn true\n\t\t-columnAlign \"center\";\n\t\n\ttext\n\t\t-label \"Source Objects\";\n\n textScrollList\n \t -numberOfRows 20\n\t -allowMultiSelection false\t\t\t\n srbUVSourceTSL;\n\nsetParent..;\n\n//TARGET LIST\n\tcolumnLayout\n\t -adjustableColumn true\n\t-columnAlign \"center\";\n\t\n text\n\t-label \"Target Objects\";\n\ntextScrollList\n\t-numberOfRows 20\n\t-allowMultiSelection true\n\tsrbUVTargetTSL;\n\nsetParent..;\nsetParent..;\nseparator -h 10;\n\nrowLayout\n\t-numberOfColumns 2\n\t-columnWidth2 200 200\n\t-columnAttach 1 \"both\" 5\n\t-columnAttach 2 \"both\" 5;\n\nradioCollection;\n    radioButton -sl -label \"Transfer One to One\" srbUVTransferOneRB;\n    radioButton -label \"Transfer One to All\" srbUVTransferAllRB;\n\nsetParent..;\nseparator -h 10;\nsetParent..;\n\nrowLayout\n\t-numberOfColumns 2\n\t-columnWidth2 200 200\n\t-columnAttach 1 \"both\" 5\n\t-columnAttach 2 \"both\" 5;\n\n\t\nbutton -bgc 0.8 0.8 0.8 -l \"Add Source Objects\" -c \"srbUVAddToList(0)\";\nbutton -bgc 0.8 0.8 0.8 -l \"Add Target Objects\" -c \"srbUVAddToList(1)\";\n\nsetParent..;\n\nrowLayout\n\t-numberOfColumns 2\n\t-columnWidth2 200 200\n\t-columnAttach 1 \"both\" 5\n\t-columnAttach 2 \"both\" 5;\n\t\nbutton  -bgc 0.5 0.5 0.5  -l \"Remove All Source Objects\" -c (\"textScrollList -edit -removeAll srbUVSourceTSL\");\nbutton  -bgc 0.5 0.5 0.5 -l \"Remove All Target Objects\" -c (\"textScrollList -edit -removeAll srbUVTargetTSL\");\n\n//SET PARENT TO THE MAIN LAYOUT---\nsetParent..;\nbutton -l \"Apply\" -c \"srbUVTransferProc\";\n\nshowWindow srbUVTransferWin;\n}\n\n//GLOBAL PROCEDURE FOR srbUVAddToList---\nglobal proc srbUVAddToList (int $choice) {\nstring $srbSelObjs[] = `ls -sl`;\nif ($choice == 0)\n{\n\tfor ($objs in $srbSelObjs)\n\t{\n\t\ttextScrollList -edit -append $objs srbUVSourceTSL;\n\t}\n}\nelse\n{\n\tfor ($objs in $srbSelObjs)\n\t{\n\t\ttextScrollList -edit -append $objs srbUVTargetTSL;\n\t}\n}\n}\n\n//GLOBAL PROCEDURE FOR srbUVTransferProc---\nglobal proc srbUVTransferProc ()\n{\n\tint $srbUVTransferOneOptionVar = `radioButton -q -sl srbUVTransferOneRB`;\n\tint $srbUVTransferAllOptionVar = `radioButton -q -sl srbUVTransferAllRB`;\n\n\tstring $srbSourceObjectsList[] = `textScrollList -query -allItems\tsrbUVSourceTSL`;\n\tstring $srbTargetObjectsList[] = `textScrollList -query -allItems\tsrbUVTargetTSL`;\n\tint $srbSizeSourceObjs = `size $srbSourceObjectsList`;\n\tint $srbSizeTargetObjs = `size $srbSourceObjectsList`;\n\n//FOR ONE TO ALL---\nif ($srbUVTransferAllOptionVar == 1)\n\t{\n\t\tif ($srbSizeSourceObjs == $srbSizeTargetObjs)\n\t\t{\n\t\t\tfor ($objs in $srbTargetObjectsList)\n\t\t\t{\n\t\t\t\tpolyTransfer -v 0 -vc 0 -uv 1 -ao $srbSourceObjectsList[0] $objs;\n\t\t\t}\n\t\t\n\t\t\tprint \"SRB - UV Transfer v0.2 has sucessfully transferred the UV...\\n\";\n\t\t}\n\t\telse\n\t\t{\n\t\twarning \"SRB - UV Transfer v0.2 has encounterred a problem. Source object is not equal to target objects...terminating...\\n\";\n\t\t}\n\t}\n\n\n//FOR ONE TO ONE---\nif ($srbUVTransferOneOptionVar == 1)\n\t{\n\t\tif ($srbSizeSourceObjs == $srbSizeTargetObjs)\n\t\t{\n\t\t\tfor ($i = 0; $i < $srbSizeSourceObjs; $i++)\n\t\t\t{\n\t\t\t\tpolyTransfer -v 0 -vc 0 -uv 1 -ao $srbSourceObjectsList[$i] $srbTargetObjectsList[$i];\n\t\t\t}\n\t\t\n\t\t\tprint \"SRB - UV Transfer v0.2 has sucessfully transferred the UV...\\n\";\n\t\t}\n\t\telse\n\t\t{\n\t\twarning \"SRB - UV Transfer v0.2 has encounterred a problem. Source object is not equal to target objects...terminating...\\n\";\n\t\t}\n\t}\n}\n\n//THE END---\n\n\nsrbUVTransfer;\n" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "LPE Light Groups" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "LPE Light Groups" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "Z:/Maya/2022/prefs/icons/aovGrp.png" 
        -image1 "Z:/Maya/2022/prefs/icons/aovGrp.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "string $lpe_list[] = `ls \"aiAOV_LPE_*\"`;\nfor ( $lpe in $lpe_list ) { \n    setAttr ($lpe + \".lightGroups\") 1; \n};\n\n//setAttr \"aiAOV_LPE_direct.lightGroups\" 1;\n//setAttr \"aiAOV_LPE_indirect.lightGroups\" 1;\n//setAttr \"aiAOV_LPE_reflect.lightGroups\" 1;\n//setAttr \"aiAOV_LPE_spec.lightGroups\" 1;\n\n" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "string $lpe_list[] = `ls \"aiAOV_LPE_*\"`;\nfor ( $lpe in $lpe_list ) { \n    setAttr ($lpe + \".lightGroups\") 0; \n};" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "LPE Light Groups off" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "Z:/Maya/2022/prefs/icons/aovGrpOff.png" 
        -image1 "Z:/Maya/2022/prefs/icons/aovGrpOff.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "string $lpe_list[] = `ls \"aiAOV_LPE_*\"`;\nfor ( $lpe in $lpe_list ) { \n    setAttr ($lpe + \".lightGroups\") 0; \n};" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    separator
        -enable 1
        -width 12
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -style "shelf" 
        -horizontal 0
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Arnold Render View" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "Arnold Render View" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "C:/Program Files/Autodesk/Arnold/maya2022/icons/RenderViewShelf_150.png" 
        -image1 "C:/Program Files/Autodesk/Arnold/maya2022/icons/RenderViewShelf_150.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import mtoa.ui.arnoldmenu as arnoldmenu; arnoldmenu.arnoldOpenMtoARenderView()" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Create File Texture Node" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "File Texture" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "Z:/Maya/2022/prefs/icons/render_aiImage.png" 
        -image1 "Z:/Maya/2022/prefs/icons/render_aiImage.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "string $file = `shadingNode -asTexture -isColorManaged file`;\nstring $uv = `shadingNode -asUtility place2dTexture`;\nconnectAttr -f ( $uv + \".coverage\" ) ( $file + \".coverage\" );\nconnectAttr -f ( $uv + \".translateFrame\" ) ( $file + \".translateFrame\" );\nconnectAttr -f ( $uv + \".rotateFrame\" ) ( $file + \".rotateFrame\" );\nconnectAttr -f ( $uv + \".mirrorU\" ) ( $file + \".mirrorU\" );\nconnectAttr -f ( $uv + \".mirrorV\" ) ( $file + \".mirrorV\" );\nconnectAttr -f ( $uv + \".stagger\" ) ( $file + \".stagger\" );\nconnectAttr -f ( $uv + \".wrapU\" ) ( $file + \".wrapU\" );\nconnectAttr -f ( $uv + \".wrapV\" ) ( $file + \".wrapV\" );\nconnectAttr -f ( $uv + \".repeatUV\" ) ( $file + \".repeatUV\" );\nconnectAttr -f ( $uv + \".offset\" ) ( $file + \".offset\" );\nconnectAttr -f ( $uv + \".rotateUV\" ) ( $file + \".rotateUV\" );\nconnectAttr -f ( $uv + \".noiseUV\" ) ( $file + \".noiseUV\" );\nconnectAttr -f ( $uv + \".vertexUvOne\" ) ( $file + \".vertexUvOne\" );\nconnectAttr -f ( $uv + \".vertexUvTwo\" ) ( $file + \".vertexUvTwo\" );\nconnectAttr -f ( $uv + \".vertexUvThree\" ) ( $file + \".vertexUvThree\" );\nconnectAttr -f ( $uv + \".vertexCameraOne\" ) ( $file + \".vertexCameraOne\" );\nconnectAttr -f ( $uv + \".outUV\" ) ( $file + \".uv\" );\nconnectAttr -f ( $uv + \".outUvFilterSize\" ) ( $file + \".uvFilterSize\" );\n\nsetAttr ($file + \".alphaIsLuminance\") 1;\n\nselect -d;\nNodeEditorHideAttributes;\n{\n\tstring $ned = ( `getCurrentNodeEditor`);\n\tif (\"\" != $ned) {\n\t\tnodeEditor -e -nodeViewMode \"simple\" $ned;\n  }\n};\n\n" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "aiStandardSurface" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "aiStandardSurface" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "Z:/Maya/2022/prefs/icons/out_aiStandardSurface_150.png" 
        -image1 "Z:/Maya/2022/prefs/icons/out_aiStandardSurface_150.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import mtoa.core as core \nimport maya.cmds as mc\n\nstandardSurface = core.createArnoldNode(\"aiStandardSurface\")\nmc.setAttr ( standardSurface+'.transmitAovs', 1)" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    separator
        -enable 1
        -width 34
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -style "shelf" 
        -horizontal 0
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Blend Roughness" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "Blend Roughness" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "Z:/Maya/2022/prefs/icons/BlendRuf.png" 
        -image1 "Z:/Maya/2022/prefs/icons/BlendRuf.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "string $file = `shadingNode -asTexture -isColorManaged file`;\nstring $uv = `shadingNode -asUtility place2dTexture`;\n\nstring $lum = `shadingNode -asUtility luminance`;\nstring $blend = `shadingNode -asUtility blendColors`;\n\nconnectAttr -f ( $uv + \".coverage\" ) ( $file + \".coverage\" );\nconnectAttr -f ( $uv + \".translateFrame\" ) ( $file + \".translateFrame\" );\nconnectAttr -f ( $uv + \".rotateFrame\" ) ( $file + \".rotateFrame\" );\nconnectAttr -f ( $uv + \".mirrorU\" ) ( $file + \".mirrorU\" );\nconnectAttr -f ( $uv + \".mirrorV\" ) ( $file + \".mirrorV\" );\nconnectAttr -f ( $uv + \".stagger\" ) ( $file + \".stagger\" );\nconnectAttr -f ( $uv + \".wrapU\" ) ( $file + \".wrapU\" );\nconnectAttr -f ( $uv + \".wrapV\" ) ( $file + \".wrapV\" );\nconnectAttr -f ( $uv + \".repeatUV\" ) ( $file + \".repeatUV\" );\nconnectAttr -f ( $uv + \".offset\" ) ( $file + \".offset\" );\nconnectAttr -f ( $uv + \".rotateUV\" ) ( $file + \".rotateUV\" );\nconnectAttr -f ( $uv + \".noiseUV\" ) ( $file + \".noiseUV\" );\nconnectAttr -f ( $uv + \".vertexUvOne\" ) ( $file + \".vertexUvOne\" );\nconnectAttr -f ( $uv + \".vertexUvTwo\" ) ( $file + \".vertexUvTwo\" );\nconnectAttr -f ( $uv + \".vertexUvThree\" ) ( $file + \".vertexUvThree\" );\nconnectAttr -f ( $uv + \".vertexCameraOne\" ) ( $file + \".vertexCameraOne\" );\nconnectAttr -f ( $uv + \".outUV\" ) ( $file + \".uv\" );\nconnectAttr -f ( $uv + \".outUvFilterSize\" ) ( $file + \".uvFilterSize\" );\n\nsetAttr ($file + \".alphaIsLuminance\") 1;\n\nselect -d;\nNodeEditorHideAttributes;\n{\n\tstring $ned = ( `getCurrentNodeEditor`);\n\tif (\"\" != $ned) {\n\t\tnodeEditor -e -nodeViewMode \"simple\" $ned;\n  }\n};\n\nconnectAttr -f ( $blend + \".output\" ) ( $lum + \".value\" );\nconnectAttr -f ( $file + \".outAlpha\" ) ( $blend + \".blender\" );\nsetAttr ($blend + \".color1\") -type double3 0.2 0.2 0.2;\nsetAttr ($blend + \".color2\") -type double3 0.5 0.5 0.5;" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Cloth Shader Network" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "Cloth Shader Network" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "cloth.svg" 
        -image1 "cloth.svg" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import mtoa.core as core \nimport maya.cmds as mc\n\n# create file node\nfileTex = mc.shadingNode ('file', asTexture=True, isColorManaged=True, name='file_ColorTex')\nuv = mc.shadingNode ('place2dTexture', asUtility=True )\nmc.connectAttr ( uv+'.coverage', fileTex+'.coverage', force=True )\nmc.connectAttr ( uv+'.translateFrame', fileTex+'.translateFrame', force=True )\nmc.connectAttr ( uv+'.rotateFrame', fileTex+'.rotateFrame', force=True )\nmc.connectAttr ( uv+'.mirrorU', fileTex+'.mirrorU', force=True )\nmc.connectAttr ( uv+'.mirrorV', fileTex+'.mirrorV', force=True )\nmc.connectAttr ( uv+'.stagger', fileTex+'.stagger', force=True )\nmc.connectAttr ( uv+'.wrapU', fileTex+'.wrapU', force=True )\nmc.connectAttr ( uv+'.wrapV', fileTex+'.wrapV', force=True )\nmc.connectAttr ( uv+'.repeatUV', fileTex+'.repeatUV', force=True )\nmc.connectAttr ( uv+'.offset', fileTex+'.offset', force=True )\nmc.connectAttr ( uv+'.rotateUV', fileTex+'.rotateUV', force=True )\nmc.connectAttr ( uv+'.noiseUV', fileTex+'.noiseUV', force=True )\nmc.connectAttr ( uv+'.vertexUvOne', fileTex+'.vertexUvOne', force=True )\nmc.connectAttr ( uv+'.vertexUvTwo', fileTex+'.vertexUvTwo', force=True )\nmc.connectAttr ( uv+'.vertexUvThree', fileTex+'.vertexUvThree', force=True )\nmc.connectAttr ( uv+'.vertexCameraOne', fileTex+'.vertexCameraOne', force=True )\nmc.connectAttr( uv+'.outUV', fileTex+'.uv', force=True )\nmc.connectAttr ( uv+'.outUvFilterSize', fileTex+'.uvFilterSize', force=True )\n\nmc.setAttr ( fileTex+'.alphaIsLuminance', 1)\nmc.setAttr (fileTex+'.defaultColor', 0.25, 0.5, 1, type='double3')\n\n\n#---------------------------------\n# create utilities\nclamp = core.createArnoldNode(\"aiClamp\")\nexposureEnd = core.createArnoldNode(\"aiColorCorrect\", name='exposureBoost')\nmc.setAttr (exposureEnd+'.exposure', 1.5)\nnoiseCC = core.createArnoldNode(\"aiColorCorrect\", name='noise_CC')\nclothCC = core.createArnoldNode(\"aiColorCorrect\", name='cloth_CC')\nmultA = core.createArnoldNode(\"aiMultiply\", name='multCloth')\nmultB = core.createArnoldNode(\"aiMultiply\", name='multColor')\n#colorTemp = mc.shadingNode ('gammaCorrect', asUtility=True, name='TexColor_PlaceHolder')\n#mc.setAttr (colorTemp+'.value', 0.25, 0.5, 1, type='double3')\n\n# create noise\nnoise = core.createArnoldNode(\"aiNoise\")\nmc.setAttr (noise+'.octaves', 3)\nmc.setAttr (noise+'.scaleX', 7)\nmc.setAttr (noise+'.scaleY', 7)\nmc.setAttr (noise+'.scaleZ', 7)\n\n# create cloth weave\nclothTex = mc.shadingNode ('cloth', asShader=True )\nclothUV = mc.shadingNode ('place2dTexture', asUtility=True)\nmc.connectAttr (clothUV+'.outUV', clothTex+'.uv' )\nmc.connectAttr (clothUV+'.outUvFilterSize', clothTex+'.uvFilterSize')\n\n# set cloth attr...\nmc.setAttr (clothUV+'.repeatU', 200)\nmc.setAttr (clothUV+'.repeatV', 200)\nmc.setAttr (clothTex+'.brightSpread', 0.2)\nmc.setAttr (clothTex+'.randomness', 0.2)\nmc.setAttr (clothTex+'.gapColor', 0.1, 0.1, 0.1, type='double3')\n\n# create shader\nclothShader = core.createArnoldNode(\"aiStandardSurface\", name='aiClothShader')\nmc.setAttr ( clothShader+'.transmitAovs', 1)\nmc.setAttr ( clothShader+'.base', 0.1)\nmc.setAttr ( clothShader+'.diffuseRoughness', 1)\nmc.setAttr ( clothShader+'.specularIOR', 100)\nmc.setAttr ( clothShader+'.specularRoughness', 0.8)\nmc.setAttr ( clothShader+'.sheen', 0.5)\nmc.setAttr ( clothShader+'.sheenRoughness', 0.1)\n\n# CONNECT NODES...\n#--------------------------------\nmc.connectAttr ( clothTex+'.outColor', clothCC+'.input', force=True )\nmc.connectAttr ( noise+'.outColor', noiseCC+'.input', force=True )\n\nmc.connectAttr ( clothCC+'.outColor', multA+'.input1', force=True )\nmc.connectAttr ( noiseCC+'.outColor', multA+'.input2', force=True )\n\nmc.connectAttr ( multA+'.outColor', multB+'.input2', force=True )\nmc.connectAttr ( multB+'.outColor', exposureEnd+'.input', force=True )\nmc.connectAttr ( exposureEnd+'.outColor', clamp+'.input', force=True )\nmc.connectAttr ( clamp+'.outColor', clothShader+'.specularColor', force=True )\n\nmc.connectAttr ( fileTex+'.outColor', multB+'.input1', force=True )\nmc.connectAttr ( fileTex+'.outColor', clothShader+'.baseColor', force=True )\nmc.connectAttr ( fileTex+'.outColor', clothShader+'.sheenColor', force=True )\n\nmc.select ( d=True )\n#mc.nodeEditor ('getCurrentNodeEditor',  e=True, graphSelectedConnections=True )" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Substance Painter to Maya Arnold" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "SubstancePaintertoMaya" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "Z:/Maya/2022/prefs/icons/sp2.png" 
        -image1 "Z:/Maya/2022/prefs/icons/sp2.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "from SubstancePainterToMaya import main\nfrom importlib import reload\nreload(main)\nmain.SPtoM()" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;

} 
